{"ast":null,"code":"var _s = $RefreshSig$();\n//리다이렉트될 화면\n\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kakao = props => {\n  _s();\n  const navigate = useNavigate();\n  //인가 코드 받기\n  let code = new URL(window.location.href).searchParams.get('code');\n  let grant_type = 'authorization_code';\n  let client_id = 'dcb8c3b23d720c296085cbdc9046ece9';\n  const API_URL = 'http://172.10.5.102:80';\n  useEffect(() => {\n    //인가 코드 전달\n    const auth_code = async () => {\n      try {\n        const response = await axios({\n          method: 'post',\n          url: `${API_URL}/handle-auth-code`,\n          data: code\n        });\n        console.log(response.data);\n        const data = await response.json();\n        const token = data.token;\n        const isNewUser = data.isNewUser;\n        console.log('token:', token);\n\n        //토큰을 로컬 스토리지에 저장\n        localStorage.setItem('user_token', token);\n        if (isNewUser) {\n          navigate('/Login');\n        } else {\n          navigate('/Main');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    auth_code();\n  }, []);\n  //권한이 필요한 api 요청을 보낼때 이 토큰을 불러와서 authorization 헤더에 포함\n  async function fetchData() {\n    // 로컬 스토리지에서 토큰 가져오기\n    const token = localStorage.getItem('user_token');\n    try {\n      const response = await fetch('https://your-server.com/api/some-secured-data', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log('Data from secured API:', data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Kakao, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["axios","React","useEffect","Navigate","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Kakao","props","_s","navigate","code","URL","window","location","href","searchParams","get","grant_type","client_id","API_URL","auth_code","response","method","url","data","console","log","json","token","isNewUser","localStorage","setItem","error","fetchData","getItem","fetch","headers","Authorization","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/madcamp/week3/test/test/src/Kakao.js"],"sourcesContent":["//리다이렉트될 화면\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\n\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\n\r\nconst Kakao = props => {\r\n  const navigate = useNavigate()\r\n  //인가 코드 받기\r\n  let code = new URL(window.location.href).searchParams.get('code')\r\n  let grant_type = 'authorization_code'\r\n  let client_id = 'dcb8c3b23d720c296085cbdc9046ece9'\r\n  const API_URL = 'http://172.10.5.102:80'\r\n  useEffect(() => {\r\n    //인가 코드 전달\r\n    const auth_code = async () => {\r\n      try {\r\n        const response = await axios({\r\n          method: 'post',\r\n          url: `${API_URL}/handle-auth-code`,\r\n          data: code,\r\n        })\r\n        console.log(response.data)\r\n        const data = await response.json()\r\n        const token = data.token\r\n        const isNewUser = data.isNewUser\r\n        console.log('token:', token)\r\n\r\n        //토큰을 로컬 스토리지에 저장\r\n        localStorage.setItem('user_token', token)\r\n        if (isNewUser) {\r\n          navigate('/Login')\r\n        } else {\r\n          navigate('/Main')\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    auth_code()\r\n  }, [])\r\n  //권한이 필요한 api 요청을 보낼때 이 토큰을 불러와서 authorization 헤더에 포함\r\n  async function fetchData() {\r\n    // 로컬 스토리지에서 토큰 가져오기\r\n    const token = localStorage.getItem('user_token')\r\n\r\n    try {\r\n      const response = await fetch(\r\n        'https://your-server.com/api/some-secured-data',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n\r\n      const data = await response.json()\r\n      console.log('Data from secured API:', data)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default Kakao\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA,IAAIS,IAAI,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;EACjE,IAAIC,UAAU,GAAG,oBAAoB;EACrC,IAAIC,SAAS,GAAG,kCAAkC;EAClD,MAAMC,OAAO,GAAG,wBAAwB;EACxCpB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAAC;UAC3ByB,MAAM,EAAE,MAAM;UACdC,GAAG,EAAG,GAAEJ,OAAQ,mBAAkB;UAClCK,IAAI,EAAEd;QACR,CAAC,CAAC;QACFe,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACG,IAAI,CAAC;QAC1B,MAAMA,IAAI,GAAG,MAAMH,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAK;QACxB,MAAMC,SAAS,GAAGL,IAAI,CAACK,SAAS;QAChCJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,KAAK,CAAC;;QAE5B;QACAE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,KAAK,CAAC;QACzC,IAAIC,SAAS,EAAE;UACbpB,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM;UACLA,QAAQ,CAAC,OAAO,CAAC;QACnB;MACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACpB;IACF,CAAC;IACDZ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN;EACA,eAAea,SAASA,CAAA,EAAG;IACzB;IACA,MAAML,KAAK,GAAGE,YAAY,CAACI,OAAO,CAAC,YAAY,CAAC;IAEhD,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMc,KAAK,CAC1B,+CAA+C,EAC/C;QACEb,MAAM,EAAE,KAAK;QACbc,OAAO,EAAE;UACPC,aAAa,EAAG,UAAST,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,MAAMJ,IAAI,GAAG,MAAMH,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;EACA,oBAAO3B,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd,CAAC;AAAAK,EAAA,CA3DKF,KAAK;EAAA,QACQL,WAAW;AAAA;AAAAqC,EAAA,GADxBhC,KAAK;AA6DX,eAAeA,KAAK;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}