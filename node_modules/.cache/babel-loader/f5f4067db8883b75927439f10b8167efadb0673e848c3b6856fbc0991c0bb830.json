{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\madcamp\\\\week3\\\\test\\\\test\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Animation from './Animation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const Rest_api_key = 'dcb8c3b23d720c296085cbdc9046ece9';\n  const redirect_uri = 'http://localhost:3000/oauth';\n  const kakaoURL = `http://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`;\n  const handleLogin = () => {\n    window.location.href = kakaoURL;\n    const code = new URL(window.location.href).searchParams.get('code');\n    //인가 코드 -> 엑세스 토큰을 얻을 수 있음. 카카오 api를 사용하여 사용자 정보를 가져오거나 다른 작업 수행 가능\n    /*  \r\n    const kakaologin = async () => {\r\n      axios(`http:// 143.248.194.51/oauth?code=${code}`, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: `grant_type=authorization_code&client_id=${Rest_api_key}&redirect_url=${redirect_uri}&code=${code}}`,\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.access.token) {\r\n            localStorage.setItem('token', data.access_token)\r\n          } else {\r\n            window.alert('로그인에 실패했습니다.')\r\n            navigate('/Login')\r\n          }\r\n        })\r\n    }\r\n    */\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uCE74\\uCE74\\uC624\\uD1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","React","useNavigate","Animation","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","Rest_api_key","redirect_uri","kakaoURL","handleLogin","window","location","href","code","URL","searchParams","get","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/madcamp/week3/test/test/src/Login.js"],"sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Animation from './Animation'\r\nconst Login = () => {\r\n  const navigate = useNavigate()\r\n  const Rest_api_key = 'dcb8c3b23d720c296085cbdc9046ece9'\r\n  const redirect_uri = 'http://localhost:3000/oauth'\r\n\r\n  const kakaoURL = `http://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`\r\n  const handleLogin = () => {\r\n    window.location.href = kakaoURL\r\n\r\n    const code = new URL(window.location.href).searchParams.get('code')\r\n    //인가 코드 -> 엑세스 토큰을 얻을 수 있음. 카카오 api를 사용하여 사용자 정보를 가져오거나 다른 작업 수행 가능\r\n    /*  \r\n    const kakaologin = async () => {\r\n      axios(`http:// 143.248.194.51/oauth?code=${code}`, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: `grant_type=authorization_code&client_id=${Rest_api_key}&redirect_url=${redirect_uri}&code=${code}}`,\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.access.token) {\r\n            localStorage.setItem('token', data.access_token)\r\n          } else {\r\n            window.alert('로그인에 실패했습니다.')\r\n            navigate('/Login')\r\n          }\r\n        })\r\n    }\r\n*/\r\n    return (\r\n      <>\r\n        <button>카카오톡</button>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Login\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,YAAY,GAAG,kCAAkC;EACvD,MAAMC,YAAY,GAAG,6BAA6B;EAElD,MAAMC,QAAQ,GAAI,oDAAmDF,YAAa,iBAAgBC,YAAa,qBAAoB;EACnI,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,QAAQ;IAE/B,MAAMK,IAAI,GAAG,IAAIC,GAAG,CAACJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACG,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;IACnE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,oBACEhB,OAAA,CAAAE,SAAA;MAAAe,QAAA,eACEjB,OAAA;QAAAiB,QAAA,EAAQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC,gBACrB,CAAC;EAEP,CAAC;AACH,CAAC;AAAAjB,EAAA,CAnCKD,KAAK;EAAA,QACQN,WAAW;AAAA;AAAAyB,EAAA,GADxBnB,KAAK;AAoCX,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}