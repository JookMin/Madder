{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\madcamp\\\\week3\\\\test\\\\test\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://172.10.5.102:80';\nfunction App() {\n  /*\n  const sendRequest = async () => {\n    const response = await axios.get('http://172.10.5.102:80')\n    try {\n      console.log(response.data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n   useEffect(() => {\n    sendRequest()\n  }, [])*/\n\n  const Rest_api_key = 'dcb8c3b23d720c296085cbdc9046ece9';\n  const redirect_uri = 'http://localhost:3000/auth';\n  const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirect_uri}&response_type =code`;\n  const handleLogin = () => {\n    window.location.href = kakaoURL;\n    const code = new URL(window.location.href).searchParams.get('code');\n    //인가 코드 -> 엑세스 토큰을 얻을 수 있음. 카카오 api를 사용하여 사용자 정보를 가져오거나 다른 작업 수행 가능\n  };\n  /*\n   const kakaoClientId = 'bfb50c9024a6d76bfe483d7601fc1aa5'\n  const kakaoOnSuccess = async data => {\n    console.log(data)\n    const idToken = data.response.access_token //엑세스 토큰 -> 백엔드\n    const kakaoResponse = await axios.post(\n      'https://kapi.kakao.com/v2/user/me',\n      {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      }\n    )\n    kakaoResponse()\n  }\n  const kakaoOnFailure = error => {\n    console.log(error)\n  }\n  */\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/kakaoLogin\",\n        element: /*#__PURE__*/_jsxDEV(KakaoLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","axios","BrowserRouter","Routes","Route","Login","jsxDEV","_jsxDEV","API_URL","App","Rest_api_key","redirect_uri","kakaoURL","handleLogin","window","location","href","code","URL","searchParams","get","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","KakaoLogin","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/madcamp/week3/test/test/src/App.js"],"sourcesContent":["import './App.css'\n\nimport React, { useEffect } from 'react'\nimport axios from 'axios'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Login from './Login'\nconst API_URL = 'http://172.10.5.102:80'\n\nfunction App() {\n  /*\n  const sendRequest = async () => {\n    const response = await axios.get('http://172.10.5.102:80')\n    try {\n      console.log(response.data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    sendRequest()\n  }, [])*/\n\n  const Rest_api_key = 'dcb8c3b23d720c296085cbdc9046ece9'\n  const redirect_uri = 'http://localhost:3000/auth'\n\n  const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirect_uri}&response_type =code`\n  const handleLogin = () => {\n    window.location.href = kakaoURL\n    const code = new URL(window.location.href).searchParams.get('code')\n    //인가 코드 -> 엑세스 토큰을 얻을 수 있음. 카카오 api를 사용하여 사용자 정보를 가져오거나 다른 작업 수행 가능\n  }\n  /*\n\n  const kakaoClientId = 'bfb50c9024a6d76bfe483d7601fc1aa5'\n  const kakaoOnSuccess = async data => {\n    console.log(data)\n    const idToken = data.response.access_token //엑세스 토큰 -> 백엔드\n    const kakaoResponse = await axios.post(\n      'https://kapi.kakao.com/v2/user/me',\n      {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      }\n    )\n    kakaoResponse()\n  }\n  const kakaoOnFailure = error => {\n    console.log(error)\n  }\n*/\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/kakaoLogin\" element={<KakaoLogin />} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAO,WAAW;AAElB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3B,MAAMC,OAAO,GAAG,wBAAwB;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAMC,YAAY,GAAG,kCAAkC;EACvD,MAAMC,YAAY,GAAG,4BAA4B;EAEjD,MAAMC,QAAQ,GAAI,qDAAoDF,YAAa,iBAAgBC,YAAa,sBAAqB;EACrI,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,QAAQ;IAC/B,MAAMK,IAAI,GAAG,IAAIC,GAAG,CAACJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACG,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;IACnE;EACF,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,oBACEb,OAAA,CAACL,aAAa;IAAAmB,QAAA,eACZd,OAAA,CAACJ,MAAM;MAAAkB,QAAA,gBACLd,OAAA,CAACH,KAAK;QAACkB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEhB,OAAA,CAACF,KAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCpB,OAAA,CAACH,KAAK;QAACkB,IAAI,EAAC,aAAa;QAACC,OAAO,eAAEhB,OAAA,CAACqB,UAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACE,EAAA,GApDQpB,GAAG;AAsDZ,eAAeA,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}