{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\madcamp\\\\week3\\\\test\\\\test\\\\src\\\\Kakao.js\",\n  _s2 = $RefreshSig$();\n//리다이렉트될 화면\n\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport Main from './Main';\nimport Login from './Login';\nimport { Navigate, useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Kakao = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  //인가 코드 받기\n  let code = new URL(window.location.href).searchParams.get('code');\n  let grant_type = 'authorization_code';\n  let client_id = 'dcb8c3b23d720c296085cbdc9046ece9';\n  const API_URL = 'http://172.10.5.102:80';\n\n  //인가 코드 전달\n  const auth_code = async () => {\n    _s();\n    const history = useHistory();\n    try {\n      const response = await axios({\n        method: 'post',\n        url: `${API_URL}/kakao`,\n        data: {\n          data: code\n        }\n      });\n      console.log(response.data);\n      //const data = await response.json()\n      const token = response.data.token;\n      const isNewUser = response.data.isNewUser;\n      console.log('token:', token);\n\n      //토큰을 로컬 스토리지에 저장\n      localStorage.setItem('user_token', token);\n      if (isNewUser) {\n        history.push('/Login');\n      } else {\n        ;\n        /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }, this);\n      }\n    } catch (error) {\n      if (error.response) {\n        // 서버에서 응답을 받았지만, HTTP 상태 코드가 200(성공) 범위에 있지 않은 경우\n        console.error('응답 오류:', error.response.status, error.response.data);\n      } else if (error.request) {\n        // 서버에서 응답을 받지 않았지만, 클라이언트 측에서 요청을 보낸 경우(네트워크 에러 등)\n        console.error('네트워크 오류:', error.request);\n      } else {\n        // axios의 설정이나 다른 요청 생성 중에 발생한 오류\n        console.error('요청 오류:', error);\n      }\n    }\n  };\n  _s(auth_code, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", true);\n  auth_code();\n\n  //권한이 필요한 api 요청을 보낼때 이 토큰을 불러와서 authorization 헤더에 포함\n  async function fetchData() {\n    // 로컬 스토리지에서 토큰 가져오기\n    const token = localStorage.getItem('user_token');\n    try {\n      const response = await fetch('https://your-server.com/api/some-secured-data', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log('Data from secured API:', data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s2(Kakao, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["axios","React","useEffect","Main","Login","Navigate","useNavigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Kakao","props","_s2","_s","$RefreshSig$","navigate","code","URL","window","location","href","searchParams","get","grant_type","client_id","API_URL","auth_code","history","useHistory","response","method","url","data","console","log","token","isNewUser","localStorage","setItem","push","to","fileName","_jsxFileName","lineNumber","columnNumber","error","status","request","fetchData","getItem","fetch","headers","Authorization","json","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/madcamp/week3/test/test/src/Kakao.js"],"sourcesContent":["//리다이렉트될 화면\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\n\r\nimport Main from './Main'\r\nimport Login from './Login'\r\nimport { Navigate, useNavigate, Link } from 'react-router-dom'\r\n\r\nconst Kakao = props => {\r\n  const navigate = useNavigate()\r\n  //인가 코드 받기\r\n  let code = new URL(window.location.href).searchParams.get('code')\r\n  let grant_type = 'authorization_code'\r\n  let client_id = 'dcb8c3b23d720c296085cbdc9046ece9'\r\n  const API_URL = 'http://172.10.5.102:80'\r\n\r\n  //인가 코드 전달\r\n  const auth_code = async () => {\r\n    const history = useHistory()\r\n    try {\r\n      const response = await axios({\r\n        method: 'post',\r\n        url: `${API_URL}/kakao`,\r\n        data: { data: code },\r\n      })\r\n      console.log(response.data)\r\n      //const data = await response.json()\r\n      const token = response.data.token\r\n      const isNewUser = response.data.isNewUser\r\n      console.log('token:', token)\r\n\r\n      //토큰을 로컬 스토리지에 저장\r\n      localStorage.setItem('user_token', token)\r\n      if (isNewUser) {\r\n        history.push('/Login')\r\n      } else {\r\n        ;<Link to=\"/\" />\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // 서버에서 응답을 받았지만, HTTP 상태 코드가 200(성공) 범위에 있지 않은 경우\r\n        console.error('응답 오류:', error.response.status, error.response.data)\r\n      } else if (error.request) {\r\n        // 서버에서 응답을 받지 않았지만, 클라이언트 측에서 요청을 보낸 경우(네트워크 에러 등)\r\n        console.error('네트워크 오류:', error.request)\r\n      } else {\r\n        // axios의 설정이나 다른 요청 생성 중에 발생한 오류\r\n        console.error('요청 오류:', error)\r\n      }\r\n    }\r\n  }\r\n  auth_code()\r\n\r\n  //권한이 필요한 api 요청을 보낼때 이 토큰을 불러와서 authorization 헤더에 포함\r\n  async function fetchData() {\r\n    // 로컬 스토리지에서 토큰 가져오기\r\n    const token = localStorage.getItem('user_token')\r\n\r\n    try {\r\n      const response = await fetch(\r\n        'https://your-server.com/api/some-secured-data',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n\r\n      const data = await response.json()\r\n      console.log('Data from secured API:', data)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default Kakao\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}