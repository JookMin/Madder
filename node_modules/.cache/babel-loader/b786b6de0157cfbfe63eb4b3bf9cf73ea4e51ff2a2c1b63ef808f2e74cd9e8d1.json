{"ast":null,"code":"var _s = $RefreshSig$();\n//리다이렉트될 화면\n\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kakao = props => {\n  _s();\n  const navigate = useNavigate();\n  //인가 코드 받기\n  let code = new URL(window.location.href).searchParams.get('code');\n  let grant_type = 'authorization_code';\n  let client_id = 'dcb8c3b23d720c296085cbdc9046ece9';\n  const API_URL = 'http://localhost:5000';\n  useEffect(() => {\n    //인가 코드 전달\n    const auth_code = async () => {\n      try {\n        const response = await axios({\n          method: 'post',\n          url: `${API_URL}/handle-auth-code`,\n          data: {\n            code: code\n          }\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    auth_code();\n\n    //인가코드로부터 인증 토큰 가져오기.\n    /*\r\n    try {\r\n      const res = async () =>\r\n        await axios\r\n          .post(\r\n            `https://kauth.kakao.com/oauth/token?\r\n        grant_type=${grant_type}\r\n        &client_id=${client_id}\r\n        &redirect_uri=http://localhost:3000/oauth\r\n        &code=${code}`,\r\n            {\r\n              headers: {\r\n                'Content-type':\r\n                  'application/x-www-form-urlencoded;charset=utf-8',\r\n              },\r\n            }\r\n          )\r\n          .then(res => {\r\n            console.log(res)\r\n            const { data } = res\r\n            const { access_token } = data\r\n              if (access_token) {\r\n              console.log(`Bearer${access_token}`)\r\n              axios\r\n                .post(\r\n                  'https://kapi.kakao.com/v2/user/me',\r\n                  {},\r\n                  {\r\n                    headers: {\r\n                      Authorization: `Bearer ${access_token}`,\r\n                      'Content-Type': 'application/x-www-form-urlencoded',\r\n                    },\r\n                  }\r\n                )\r\n                .then(res => {\r\n                  console.log('데이터 성공')\r\n                  console.log(res)\r\n                })\r\n            } else {\r\n              console.log('access_token 없음')\r\n            }\r\n            //인가코드를 서버로 전송\r\n          })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n    */\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Kakao, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["axios","React","useEffect","Navigate","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Kakao","props","_s","navigate","code","URL","window","location","href","searchParams","get","grant_type","client_id","API_URL","auth_code","response","method","url","data","console","log","error","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/madcamp/week3/test/test/src/Kakao.js"],"sourcesContent":["//리다이렉트될 화면\r\n\r\nimport axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\n\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\n\r\nconst Kakao = props => {\r\n  const navigate = useNavigate()\r\n  //인가 코드 받기\r\n  let code = new URL(window.location.href).searchParams.get('code')\r\n  let grant_type = 'authorization_code'\r\n  let client_id = 'dcb8c3b23d720c296085cbdc9046ece9'\r\n  const API_URL = 'http://localhost:5000'\r\n  useEffect(() => {\r\n    //인가 코드 전달\r\n    const auth_code = async () => {\r\n      try {\r\n        const response = await axios({\r\n          method: 'post',\r\n          url: `${API_URL}/handle-auth-code`,\r\n          data: { code: code },\r\n        })\r\n        console.log(response.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    auth_code()\r\n\r\n    //인가코드로부터 인증 토큰 가져오기.\r\n    /*\r\n    try {\r\n      const res = async () =>\r\n        await axios\r\n          .post(\r\n            `https://kauth.kakao.com/oauth/token?\r\n        grant_type=${grant_type}\r\n        &client_id=${client_id}\r\n        &redirect_uri=http://localhost:3000/oauth\r\n        &code=${code}`,\r\n            {\r\n              headers: {\r\n                'Content-type':\r\n                  'application/x-www-form-urlencoded;charset=utf-8',\r\n              },\r\n            }\r\n          )\r\n          .then(res => {\r\n            console.log(res)\r\n            const { data } = res\r\n            const { access_token } = data\r\n\r\n            if (access_token) {\r\n              console.log(`Bearer${access_token}`)\r\n              axios\r\n                .post(\r\n                  'https://kapi.kakao.com/v2/user/me',\r\n                  {},\r\n                  {\r\n                    headers: {\r\n                      Authorization: `Bearer ${access_token}`,\r\n                      'Content-Type': 'application/x-www-form-urlencoded',\r\n                    },\r\n                  }\r\n                )\r\n                .then(res => {\r\n                  console.log('데이터 성공')\r\n                  console.log(res)\r\n                })\r\n            } else {\r\n              console.log('access_token 없음')\r\n            }\r\n            //인가코드를 서버로 전송\r\n          })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n    */\r\n  }, [])\r\n  return <></>\r\n}\r\n\r\nexport default Kakao\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA,IAAIS,IAAI,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;EACjE,IAAIC,UAAU,GAAG,oBAAoB;EACrC,IAAIC,SAAS,GAAG,kCAAkC;EAClD,MAAMC,OAAO,GAAG,uBAAuB;EACvCpB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAAC;UAC3ByB,MAAM,EAAE,MAAM;UACdC,GAAG,EAAG,GAAEJ,OAAQ,mBAAkB;UAClCK,IAAI,EAAE;YAAEd,IAAI,EAAEA;UAAK;QACrB,CAAC,CAAC;QACFe,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACG,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;;IAEX;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOf,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd,CAAC;AAAAK,EAAA,CA1EKF,KAAK;EAAA,QACQL,WAAW;AAAA;AAAA2B,EAAA,GADxBtB,KAAK;AA4EX,eAAeA,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}